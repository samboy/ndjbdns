# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
sbin_PROGRAMS = axfrdns$(EXEEXT) dnscache$(EXEEXT) rbldns$(EXEEXT) \
	tinydns$(EXEEXT) walldns$(EXEEXT)
bin_PROGRAMS = dnsip$(EXEEXT) dnsipq$(EXEEXT) dnsq$(EXEEXT) \
	dnsname$(EXEEXT) dnstxt$(EXEEXT) dnsqr$(EXEEXT) \
	dnsfilter$(EXEEXT) dnstrace$(EXEEXT) tinydns-data$(EXEEXT) \
	tinydns-edit$(EXEEXT) tinydns-get$(EXEEXT) randomip$(EXEEXT) \
	axfr-get$(EXEEXT) tcprules$(EXEEXT) rbldns-data$(EXEEXT)
noinst_PROGRAMS = dnsmx$(EXEEXT)
subdir = .
DIST_COMMON = INSTALL NEWS README AUTHORS ChangeLog \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(srcdir)/config.h.in depcomp COPYING TODO config.guess \
	config.sub install-sh missing ltmain.sh
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
liballoc_a_AR = $(AR) $(ARFLAGS)
liballoc_a_LIBADD =
am_liballoc_a_OBJECTS = alloc.$(OBJEXT) getln.$(OBJEXT) \
	getln2.$(OBJEXT) stralloc.$(OBJEXT)
liballoc_a_OBJECTS = $(am_liballoc_a_OBJECTS)
libbuffer_a_AR = $(AR) $(ARFLAGS)
libbuffer_a_LIBADD =
am_libbuffer_a_OBJECTS = buffer.$(OBJEXT) strerr_die.$(OBJEXT) \
	strerr_sys.$(OBJEXT)
libbuffer_a_OBJECTS = $(am_libbuffer_a_OBJECTS)
libbyte_a_AR = $(AR) $(ARFLAGS)
libbyte_a_LIBADD =
am_libbyte_a_OBJECTS = byte_chr.$(OBJEXT) byte_rchr.$(OBJEXT) \
	byte_copy.$(OBJEXT) byte_cr.$(OBJEXT) byte_diff.$(OBJEXT) \
	byte_zero.$(OBJEXT) case_diffb.$(OBJEXT) case_diffs.$(OBJEXT) \
	case_lowerb.$(OBJEXT) fmt_ulong.$(OBJEXT) ip4_fmt.$(OBJEXT) \
	ip4_scan.$(OBJEXT) scan_ulong.$(OBJEXT) str_chr.$(OBJEXT) \
	str_diff.$(OBJEXT) str_len.$(OBJEXT) str_rchr.$(OBJEXT) \
	str_start.$(OBJEXT) uint16_pack.$(OBJEXT) \
	uint16_unpack.$(OBJEXT) uint32_pack.$(OBJEXT) \
	uint32_unpack.$(OBJEXT)
libbyte_a_OBJECTS = $(am_libbyte_a_OBJECTS)
libcdb_a_AR = $(AR) $(ARFLAGS)
libcdb_a_LIBADD =
am_libcdb_a_OBJECTS = cdb.$(OBJEXT) cdb_hash.$(OBJEXT) \
	cdb_make.$(OBJEXT)
libcdb_a_OBJECTS = $(am_libcdb_a_OBJECTS)
libdns_a_AR = $(AR) $(ARFLAGS)
libdns_a_LIBADD =
am_libdns_a_OBJECTS = dns_dfd.$(OBJEXT) dns_domain.$(OBJEXT) \
	dns_dtda.$(OBJEXT) dns_ip.$(OBJEXT) dns_ipq.$(OBJEXT) \
	dns_mx.$(OBJEXT) dns_name.$(OBJEXT) dns_nd.$(OBJEXT) \
	dns_packet.$(OBJEXT) dns_random.$(OBJEXT) dns_rcip.$(OBJEXT) \
	dns_rcrw.$(OBJEXT) dns_resolve.$(OBJEXT) dns_sortip.$(OBJEXT) \
	dns_transmit.$(OBJEXT) dns_txt.$(OBJEXT)
libdns_a_OBJECTS = $(am_libdns_a_OBJECTS)
libenv_a_AR = $(AR) $(ARFLAGS)
libenv_a_LIBADD =
am_libenv_a_OBJECTS = env.$(OBJEXT)
libenv_a_OBJECTS = $(am_libenv_a_OBJECTS)
libtai_a_AR = $(AR) $(ARFLAGS)
libtai_a_LIBADD =
am_libtai_a_OBJECTS = tai_add.$(OBJEXT) tai_now.$(OBJEXT) \
	tai_pack.$(OBJEXT) tai_sub.$(OBJEXT) tai_uint.$(OBJEXT) \
	tai_unpack.$(OBJEXT) taia_add.$(OBJEXT) taia_approx.$(OBJEXT) \
	taia_frac.$(OBJEXT) taia_less.$(OBJEXT) taia_now.$(OBJEXT) \
	taia_pack.$(OBJEXT) taia_sub.$(OBJEXT) taia_tai.$(OBJEXT) \
	taia_uint.$(OBJEXT)
libtai_a_OBJECTS = $(am_libtai_a_OBJECTS)
libunix_a_AR = $(AR) $(ARFLAGS)
libunix_a_LIBADD =
am_libunix_a_OBJECTS = error.$(OBJEXT) error_str.$(OBJEXT) \
	ndelay_off.$(OBJEXT) ndelay_on.$(OBJEXT) open_read.$(OBJEXT) \
	open_trunc.$(OBJEXT) openreadclose.$(OBJEXT) \
	readclose.$(OBJEXT) seek_set.$(OBJEXT) socket_accept.$(OBJEXT) \
	socket_bind.$(OBJEXT) socket_conn.$(OBJEXT) \
	socket_listen.$(OBJEXT) socket_recv.$(OBJEXT) \
	socket_send.$(OBJEXT) socket_tcp.$(OBJEXT) \
	socket_udp.$(OBJEXT)
libunix_a_OBJECTS = $(am_libunix_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" \
	"$(DESTDIR)$(man8dir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS) $(sbin_PROGRAMS)
am_axfr_get_OBJECTS = axfr-get.$(OBJEXT) iopause.$(OBJEXT) \
	timeoutread.$(OBJEXT) timeoutwrite.$(OBJEXT)
axfr_get_OBJECTS = $(am_axfr_get_OBJECTS)
axfr_get_DEPENDENCIES = libdns.a libtai.a liballoc.a libbuffer.a \
	libunix.a libbyte.a
am_axfrdns_OBJECTS = axfrdns.$(OBJEXT) iopause.$(OBJEXT) \
	droproot.$(OBJEXT) tdlookup.$(OBJEXT) response.$(OBJEXT) \
	log.$(OBJEXT) prot.$(OBJEXT) timeoutread.$(OBJEXT) \
	timeoutwrite.$(OBJEXT) common.$(OBJEXT)
axfrdns_OBJECTS = $(am_axfrdns_OBJECTS)
axfrdns_DEPENDENCIES = libdns.a libtai.a liballoc.a libenv.a libcdb.a \
	libbuffer.a libunix.a libbyte.a
am_dnscache_OBJECTS = dnscache.$(OBJEXT) droproot.$(OBJEXT) \
	okclient.$(OBJEXT) log.$(OBJEXT) siphash.$(OBJEXT) \
	cache.$(OBJEXT) dns_random.$(OBJEXT) query.$(OBJEXT) \
	response.$(OBJEXT) dd.$(OBJEXT) roots.$(OBJEXT) \
	iopause.$(OBJEXT) prot.$(OBJEXT) common.$(OBJEXT)
dnscache_OBJECTS = $(am_dnscache_OBJECTS)
dnscache_DEPENDENCIES = libdns.a libenv.a liballoc.a libbuffer.a \
	libtai.a libcdb.a libunix.a libbyte.a
am_dnsfilter_OBJECTS = dnsfilter.$(OBJEXT) iopause.$(OBJEXT)
dnsfilter_OBJECTS = $(am_dnsfilter_OBJECTS)
dnsfilter_DEPENDENCIES = libdns.a libenv.a libtai.a liballoc.a \
	libbuffer.a libunix.a libbyte.a
am_dnsip_OBJECTS = dnsip.$(OBJEXT) iopause.$(OBJEXT)
dnsip_OBJECTS = $(am_dnsip_OBJECTS)
dnsip_DEPENDENCIES = libdns.a libenv.a libtai.a liballoc.a libbuffer.a \
	libunix.a libbyte.a
am_dnsipq_OBJECTS = dnsipq.$(OBJEXT) iopause.$(OBJEXT)
dnsipq_OBJECTS = $(am_dnsipq_OBJECTS)
dnsipq_DEPENDENCIES = libdns.a libenv.a libtai.a liballoc.a \
	libbuffer.a libunix.a libbyte.a
am_dnsmx_OBJECTS = dnsmx.$(OBJEXT) iopause.$(OBJEXT)
dnsmx_OBJECTS = $(am_dnsmx_OBJECTS)
dnsmx_DEPENDENCIES = libdns.a libenv.a libtai.a liballoc.a libbuffer.a \
	libunix.a libbyte.a
am_dnsname_OBJECTS = dnsname.$(OBJEXT) iopause.$(OBJEXT)
dnsname_OBJECTS = $(am_dnsname_OBJECTS)
dnsname_DEPENDENCIES = libdns.a libenv.a libtai.a liballoc.a \
	libbuffer.a libunix.a libbyte.a
am_dnsq_OBJECTS = dnsq.$(OBJEXT) iopause.$(OBJEXT) \
	printrecord.$(OBJEXT) printpacket.$(OBJEXT) \
	parsetype.$(OBJEXT)
dnsq_OBJECTS = $(am_dnsq_OBJECTS)
dnsq_DEPENDENCIES = libdns.a libenv.a libtai.a libbuffer.a liballoc.a \
	libunix.a libbyte.a
am_dnsqr_OBJECTS = dnsqr.$(OBJEXT) iopause.$(OBJEXT) \
	printrecord.$(OBJEXT) printpacket.$(OBJEXT) \
	parsetype.$(OBJEXT)
dnsqr_OBJECTS = $(am_dnsqr_OBJECTS)
dnsqr_DEPENDENCIES = libdns.a libenv.a libtai.a libbuffer.a liballoc.a \
	libunix.a libbyte.a
am_dnstrace_OBJECTS = dnstrace.$(OBJEXT) dd.$(OBJEXT) \
	iopause.$(OBJEXT) printrecord.$(OBJEXT) parsetype.$(OBJEXT)
dnstrace_OBJECTS = $(am_dnstrace_OBJECTS)
dnstrace_DEPENDENCIES = libdns.a libenv.a libtai.a liballoc.a \
	libbuffer.a libunix.a libbyte.a
am_dnstxt_OBJECTS = dnstxt.$(OBJEXT) iopause.$(OBJEXT)
dnstxt_OBJECTS = $(am_dnstxt_OBJECTS)
dnstxt_DEPENDENCIES = libdns.a libenv.a libtai.a liballoc.a \
	libbuffer.a libunix.a libbyte.a
am_randomip_OBJECTS = random-ip.$(OBJEXT)
randomip_OBJECTS = $(am_randomip_OBJECTS)
randomip_DEPENDENCIES = libdns.a libtai.a libbuffer.a libunix.a \
	libbyte.a
am_rbldns_OBJECTS = rbldns.$(OBJEXT) server.$(OBJEXT) \
	response.$(OBJEXT) dd.$(OBJEXT) droproot.$(OBJEXT) \
	prot.$(OBJEXT) common.$(OBJEXT) iopause.$(OBJEXT) \
	log.$(OBJEXT)
rbldns_OBJECTS = $(am_rbldns_OBJECTS)
rbldns_DEPENDENCIES = libdns.a libenv.a libtai.a libcdb.a liballoc.a \
	libbuffer.a libunix.a libbyte.a
am_rbldns_data_OBJECTS = rbldns-data.$(OBJEXT)
rbldns_data_OBJECTS = $(am_rbldns_data_OBJECTS)
rbldns_data_DEPENDENCIES = libcdb.a liballoc.a libbuffer.a libunix.a \
	libbyte.a
am_tcprules_OBJECTS = tcprules.$(OBJEXT)
tcprules_OBJECTS = $(am_tcprules_OBJECTS)
tcprules_DEPENDENCIES = libcdb.a liballoc.a libbuffer.a libunix.a \
	libbyte.a
am_tinydns_OBJECTS = tinydns.$(OBJEXT) server.$(OBJEXT) \
	droproot.$(OBJEXT) tdlookup.$(OBJEXT) response.$(OBJEXT) \
	log.$(OBJEXT) prot.$(OBJEXT) common.$(OBJEXT) \
	iopause.$(OBJEXT)
tinydns_OBJECTS = $(am_tinydns_OBJECTS)
tinydns_DEPENDENCIES = libdns.a libtai.a libenv.a libcdb.a liballoc.a \
	libbuffer.a libunix.a libbyte.a
am_tinydns_data_OBJECTS = tinydns-data.$(OBJEXT)
tinydns_data_OBJECTS = $(am_tinydns_data_OBJECTS)
tinydns_data_DEPENDENCIES = libcdb.a libdns.a liballoc.a libbuffer.a \
	libunix.a libbyte.a
am_tinydns_edit_OBJECTS = tinydns-edit.$(OBJEXT)
tinydns_edit_OBJECTS = $(am_tinydns_edit_OBJECTS)
tinydns_edit_DEPENDENCIES = libdns.a liballoc.a libbuffer.a libunix.a \
	libbyte.a
am_tinydns_get_OBJECTS = tinydns-get.$(OBJEXT) tdlookup.$(OBJEXT) \
	response.$(OBJEXT) printpacket.$(OBJEXT) printrecord.$(OBJEXT) \
	parsetype.$(OBJEXT)
tinydns_get_OBJECTS = $(am_tinydns_get_OBJECTS)
tinydns_get_DEPENDENCIES = libdns.a libtai.a libcdb.a libbuffer.a \
	liballoc.a libunix.a libbyte.a
am_walldns_OBJECTS = walldns.$(OBJEXT) server.$(OBJEXT) \
	response.$(OBJEXT) droproot.$(OBJEXT) prot.$(OBJEXT) \
	dd.$(OBJEXT) common.$(OBJEXT) iopause.$(OBJEXT) log.$(OBJEXT)
walldns_OBJECTS = $(am_walldns_OBJECTS)
walldns_DEPENDENCIES = libdns.a libenv.a libcdb.a liballoc.a \
	libbuffer.a libunix.a libbyte.a libtai.a
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(liballoc_a_SOURCES) $(libbuffer_a_SOURCES) \
	$(libbyte_a_SOURCES) $(libcdb_a_SOURCES) $(libdns_a_SOURCES) \
	$(libenv_a_SOURCES) $(libtai_a_SOURCES) $(libunix_a_SOURCES) \
	$(axfr_get_SOURCES) $(axfrdns_SOURCES) $(dnscache_SOURCES) \
	$(dnsfilter_SOURCES) $(dnsip_SOURCES) $(dnsipq_SOURCES) \
	$(dnsmx_SOURCES) $(dnsname_SOURCES) $(dnsq_SOURCES) \
	$(dnsqr_SOURCES) $(dnstrace_SOURCES) $(dnstxt_SOURCES) \
	$(randomip_SOURCES) $(rbldns_SOURCES) $(rbldns_data_SOURCES) \
	$(tcprules_SOURCES) $(tinydns_SOURCES) $(tinydns_data_SOURCES) \
	$(tinydns_edit_SOURCES) $(tinydns_get_SOURCES) \
	$(walldns_SOURCES)
DIST_SOURCES = $(liballoc_a_SOURCES) $(libbuffer_a_SOURCES) \
	$(libbyte_a_SOURCES) $(libcdb_a_SOURCES) $(libdns_a_SOURCES) \
	$(libenv_a_SOURCES) $(libtai_a_SOURCES) $(libunix_a_SOURCES) \
	$(axfr_get_SOURCES) $(axfrdns_SOURCES) $(dnscache_SOURCES) \
	$(dnsfilter_SOURCES) $(dnsip_SOURCES) $(dnsipq_SOURCES) \
	$(dnsmx_SOURCES) $(dnsname_SOURCES) $(dnsq_SOURCES) \
	$(dnsqr_SOURCES) $(dnstrace_SOURCES) $(dnstxt_SOURCES) \
	$(randomip_SOURCES) $(rbldns_SOURCES) $(rbldns_data_SOURCES) \
	$(tcprules_SOURCES) $(tinydns_SOURCES) $(tinydns_data_SOURCES) \
	$(tinydns_edit_SOURCES) $(tinydns_get_SOURCES) \
	$(walldns_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
man8dir = $(mandir)/man8
NROFF = nroff
MANS = $(nodist_man1_MANS) $(nodist_man8_MANS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CFLAGS = -g -O2 -Wall -Wextra -fstack-check -fPIC \
			-D PREFIX=\"${prefix}\" -D SYSCONFDIR=\"${sysconfdir}\"

SUBDIRS = etc
bin_SCRIPTS = dnstracesort
noinst_MANS = dnscache.ms dnsip.ms dnsq.ms dnsfilter.ms djbdns.ms \
	tinydns-data.ms tinydns-edit.ms tinydns-get.ms tinydns.ms dnsipq.ms \
	dnstxt.ms tcprules.ms dnsqr.ms random-ip.ms dnstrace.ms axfrdns.ms \
	axfr-get.ms dnsname.ms rbldns.ms rbldns-data.ms walldns.ms

nodist_man8_MANS = axfrdns.8 dnscache.8 rbldns.8 tinydns.8 walldns.8
nodist_man1_MANS = dnsip.1 dnsq.1 dnsfilter.1 djbdns.1 tinydns-data.1 \
	tinydns-edit.1 tinydns-get.1 dnsipq.1 dnstxt.1 tcprules.1 dnsqr.1 \
	randomip.1 dnstrace.1 axfr-get.1 dnsname.1 rbldns-data.1

CLEANFILES = $(bin_SCRIPTS) $(nodist_man1_MANS) $(nodist_man8_MANS)
EXTRA_DIST = dnstracesort.sh readme.ms README INSTALL TODO ChangeLog \
	COPYING $(noinst_MANS) ndjbdns.logrotate

axfrdns_SOURCES = axfrdns.c iopause.c droproot.c tdlookup.c response.c \
	log.c prot.c timeoutread.c timeoutwrite.c common.c \
	droproot.h timeoutread.h timeoutwrite.h response.h select.h \
	prot.h hasshsgr.h common.h

axfrdns_LDADD = libdns.a libtai.a liballoc.a libenv.a libcdb.a \
	libbuffer.a libunix.a libbyte.a

axfr_get_SOURCES = axfr-get.c iopause.c timeoutread.c timeoutwrite.c \
	timeoutread.h timeoutwrite.h select.h

axfr_get_LDADD = libdns.a libtai.a liballoc.a libbuffer.a libunix.a libbyte.a
dnscache_SOURCES = dnscache.c droproot.c okclient.c log.c siphash.c cache.c \
	dns_random.c query.c response.c dd.c roots.c iopause.c prot.c common.c \
	response.h select.h prot.h roots.h query.h siphash.h cache.h log.h \
	okclient.h dd.h direntry.h hasshsgr.h version.h common.h clients.h cdb.h

dnscache_LDADD = libdns.a libenv.a liballoc.a libbuffer.a libtai.a libcdb.a \
	libunix.a libbyte.a

dnsfilter_SOURCES = dnsfilter.c iopause.c select.h
dnsfilter_LDADD = libdns.a libenv.a libtai.a liballoc.a \
	libbuffer.a libunix.a libbyte.a

dnsip_SOURCES = dnsip.c iopause.c select.h version.h
dnsip_LDADD = libdns.a libenv.a libtai.a liballoc.a libbuffer.a \
	libunix.a libbyte.a

dnsipq_SOURCES = dnsipq.c iopause.c select.h
dnsipq_LDADD = libdns.a libenv.a libtai.a liballoc.a libbuffer.a \
	libunix.a libbyte.a

dnsmx_SOURCES = dnsmx.c iopause.c select.h
dnsmx_LDADD = libdns.a libenv.a libtai.a liballoc.a libbuffer.a \
	libunix.a libbyte.a

dnsname_SOURCES = dnsname.c iopause.c select.h
dnsname_LDADD = libdns.a libenv.a libtai.a liballoc.a libbuffer.a \
	libunix.a libbyte.a

dnsq_SOURCES = dnsq.c iopause.c printrecord.c printpacket.c parsetype.c \
	select.h printpacket.h parsetype.h printrecord.h

dnsq_LDADD = libdns.a libenv.a libtai.a libbuffer.a liballoc.a \
	libunix.a libbyte.a

dnsqr_SOURCES = dnsqr.c iopause.c printrecord.c printpacket.c parsetype.c \
	select.h printpacket.h parsetype.h printrecord.h

dnsqr_LDADD = libdns.a libenv.a libtai.a libbuffer.a liballoc.a \
	libunix.a libbyte.a

dnstrace_SOURCES = dnstrace.c dd.c iopause.c printrecord.c parsetype.c \
	select.h dd.h parsetype.h printrecord.h

dnstrace_LDADD = libdns.a libenv.a libtai.a liballoc.a libbuffer.a \
	libunix.a libbyte.a

dnstxt_SOURCES = dnstxt.c iopause.c select.h
dnstxt_LDADD = libdns.a libenv.a libtai.a liballoc.a libbuffer.a \
	libunix.a libbyte.a

randomip_SOURCES = random-ip.c
randomip_LDADD = libdns.a libtai.a libbuffer.a libunix.a libbyte.a
rbldns_SOURCES = rbldns.c server.c response.c dd.c droproot.c prot.c \
	common.c iopause.c log.c \
	log.h response.h prot.h dd.h hasshsgr.h common.h iopause.h

rbldns_LDADD = libdns.a libenv.a libtai.a libcdb.a liballoc.a libbuffer.a \
	libunix.a libbyte.a

rbldns_data_SOURCES = rbldns-data.c
rbldns_data_LDADD = libcdb.a liballoc.a libbuffer.a libunix.a libbyte.a
tcprules_SOURCES = tcprules.c
tcprules_LDADD = libcdb.a liballoc.a libbuffer.a libunix.a libbyte.a
tinydns_SOURCES = tinydns.c server.c droproot.c tdlookup.c response.c \
	log.c prot.c common.c iopause.c \
	log.h response.h prot.h hasshsgr.h common.h iopause.h

tinydns_LDADD = libdns.a libtai.a libenv.a libcdb.a liballoc.a libbuffer.a \
	libunix.a libbyte.a

tinydns_data_SOURCES = tinydns-data.c
tinydns_data_LDADD = libcdb.a libdns.a liballoc.a libbuffer.a \
	libunix.a libbyte.a

tinydns_edit_SOURCES = tinydns-edit.c
tinydns_edit_LDADD = libdns.a liballoc.a libbuffer.a libunix.a libbyte.a
tinydns_get_SOURCES = tinydns-get.c tdlookup.c response.c printpacket.c \
	printrecord.c parsetype.c \
	response.h printrecord.h

tinydns_get_LDADD = libdns.a libtai.a libcdb.a libbuffer.a liballoc.a \
	libunix.a libbyte.a

walldns_SOURCES = walldns.c server.c response.c droproot.c prot.c dd.c \
	common.c iopause.c log.c \
	log.h response.h prot.h dd.h hasshsgr.h common.h iopause.h

walldns_LDADD = libdns.a libenv.a libcdb.a liballoc.a libbuffer.a \
	libunix.a libbyte.a libtai.a


#
# Static libraries built for compilation. These are NOT installed.
#
noinst_LIBRARIES = liballoc.a libbuffer.a libbyte.a libcdb.a libdns.a \
	libenv.a libtai.a libunix.a

liballoc_a_SOURCES = alloc.c getln.c getln2.c stralloc.c \
	alloc.h error.h byte.h getln.h buffer.h stralloc.h gen_alloc.h \
	gen_allocdefs.h str.h

#	stralloc_cat.c
#	stralloc_catb.c stralloc_cats.c stralloc_copy.c stralloc_eady.c \
#	stralloc_num.c stralloc_opyb.c stralloc_opys.c stralloc_pend.c
libbuffer_a_SOURCES = buffer.c strerr_die.c strerr_sys.c \
	buffer.h byte.h error.h str.h strerr.h

#	buffer_1.c buffer_2.c buffer_copy.c \
#	buffer_get.c buffer_put.c buffer_read.c buffer_write.c
libbyte_a_SOURCES = byte_chr.c byte_rchr.c byte_copy.c byte_cr.c \
	byte_diff.c byte_zero.c case_diffb.c case_diffs.c case_lowerb.c \
	fmt_ulong.c ip4_fmt.c ip4_scan.c scan_ulong.c str_chr.c str_diff.c \
	str_len.c str_rchr.c str_start.c uint16_pack.c uint16_unpack.c \
	uint32_pack.c uint32_unpack.c byte.h case.h fmt.h ip4.h scan.h str.h \
	uint16.h uint32.h

libcdb_a_SOURCES = cdb.c cdb_hash.c cdb_make.c \
	error.h seek.h byte.h cdb.h uint32.h alloc.h cdb_make.h buffer.h

libdns_a_SOURCES = dns_dfd.c dns_domain.c dns_dtda.c dns_ip.c dns_ipq.c \
	dns_mx.c dns_name.c dns_nd.c dns_packet.c dns_random.c dns_rcip.c \
	dns_rcrw.c dns_resolve.c dns_sortip.c dns_transmit.c dns_txt.c \
	error.h alloc.h byte.h dns.h stralloc.h gen_alloc.h iopause.h taia.h \
	tai.h uint64.h case.h uint16.h str.h fmt.h uint32.h openreadclose.h \
	ip4.h env.h socket.h select.h

libenv_a_SOURCES = env.c str.h env.h
libtai_a_SOURCES = tai_add.c tai_now.c tai_pack.c tai_sub.c tai_uint.c \
	tai_unpack.c taia_add.c taia_approx.c taia_frac.c taia_less.c \
	taia_now.c taia_pack.c taia_sub.c taia_tai.c taia_uint.c \
	tai.h uint64.h taia.h

libunix_a_SOURCES = error.c error_str.c ndelay_off.c ndelay_on.c \
	open_read.c open_trunc.c openreadclose.c readclose.c seek_set.c \
	socket_accept.c socket_bind.c socket_conn.c socket_listen.c \
	socket_recv.c socket_send.c socket_tcp.c socket_udp.c error.h \
	ndelay.h open.h readclose.h stralloc.h gen_alloc.h openreadclose.h \
	seek.h byte.h socket.h uint16.h

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

liballoc.a: $(liballoc_a_OBJECTS) $(liballoc_a_DEPENDENCIES) $(EXTRA_liballoc_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f liballoc.a
	$(AM_V_AR)$(liballoc_a_AR) liballoc.a $(liballoc_a_OBJECTS) $(liballoc_a_LIBADD)
	$(AM_V_at)$(RANLIB) liballoc.a

libbuffer.a: $(libbuffer_a_OBJECTS) $(libbuffer_a_DEPENDENCIES) $(EXTRA_libbuffer_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbuffer.a
	$(AM_V_AR)$(libbuffer_a_AR) libbuffer.a $(libbuffer_a_OBJECTS) $(libbuffer_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbuffer.a

libbyte.a: $(libbyte_a_OBJECTS) $(libbyte_a_DEPENDENCIES) $(EXTRA_libbyte_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbyte.a
	$(AM_V_AR)$(libbyte_a_AR) libbyte.a $(libbyte_a_OBJECTS) $(libbyte_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbyte.a

libcdb.a: $(libcdb_a_OBJECTS) $(libcdb_a_DEPENDENCIES) $(EXTRA_libcdb_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcdb.a
	$(AM_V_AR)$(libcdb_a_AR) libcdb.a $(libcdb_a_OBJECTS) $(libcdb_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcdb.a

libdns.a: $(libdns_a_OBJECTS) $(libdns_a_DEPENDENCIES) $(EXTRA_libdns_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libdns.a
	$(AM_V_AR)$(libdns_a_AR) libdns.a $(libdns_a_OBJECTS) $(libdns_a_LIBADD)
	$(AM_V_at)$(RANLIB) libdns.a

libenv.a: $(libenv_a_OBJECTS) $(libenv_a_DEPENDENCIES) $(EXTRA_libenv_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libenv.a
	$(AM_V_AR)$(libenv_a_AR) libenv.a $(libenv_a_OBJECTS) $(libenv_a_LIBADD)
	$(AM_V_at)$(RANLIB) libenv.a

libtai.a: $(libtai_a_OBJECTS) $(libtai_a_DEPENDENCIES) $(EXTRA_libtai_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libtai.a
	$(AM_V_AR)$(libtai_a_AR) libtai.a $(libtai_a_OBJECTS) $(libtai_a_LIBADD)
	$(AM_V_at)$(RANLIB) libtai.a

libunix.a: $(libunix_a_OBJECTS) $(libunix_a_DEPENDENCIES) $(EXTRA_libunix_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libunix.a
	$(AM_V_AR)$(libunix_a_AR) libunix.a $(libunix_a_OBJECTS) $(libunix_a_LIBADD)
	$(AM_V_at)$(RANLIB) libunix.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)

axfr-get$(EXEEXT): $(axfr_get_OBJECTS) $(axfr_get_DEPENDENCIES) $(EXTRA_axfr_get_DEPENDENCIES) 
	@rm -f axfr-get$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(axfr_get_OBJECTS) $(axfr_get_LDADD) $(LIBS)

axfrdns$(EXEEXT): $(axfrdns_OBJECTS) $(axfrdns_DEPENDENCIES) $(EXTRA_axfrdns_DEPENDENCIES) 
	@rm -f axfrdns$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(axfrdns_OBJECTS) $(axfrdns_LDADD) $(LIBS)

dnscache$(EXEEXT): $(dnscache_OBJECTS) $(dnscache_DEPENDENCIES) $(EXTRA_dnscache_DEPENDENCIES) 
	@rm -f dnscache$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dnscache_OBJECTS) $(dnscache_LDADD) $(LIBS)

dnsfilter$(EXEEXT): $(dnsfilter_OBJECTS) $(dnsfilter_DEPENDENCIES) $(EXTRA_dnsfilter_DEPENDENCIES) 
	@rm -f dnsfilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dnsfilter_OBJECTS) $(dnsfilter_LDADD) $(LIBS)

dnsip$(EXEEXT): $(dnsip_OBJECTS) $(dnsip_DEPENDENCIES) $(EXTRA_dnsip_DEPENDENCIES) 
	@rm -f dnsip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dnsip_OBJECTS) $(dnsip_LDADD) $(LIBS)

dnsipq$(EXEEXT): $(dnsipq_OBJECTS) $(dnsipq_DEPENDENCIES) $(EXTRA_dnsipq_DEPENDENCIES) 
	@rm -f dnsipq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dnsipq_OBJECTS) $(dnsipq_LDADD) $(LIBS)

dnsmx$(EXEEXT): $(dnsmx_OBJECTS) $(dnsmx_DEPENDENCIES) $(EXTRA_dnsmx_DEPENDENCIES) 
	@rm -f dnsmx$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dnsmx_OBJECTS) $(dnsmx_LDADD) $(LIBS)

dnsname$(EXEEXT): $(dnsname_OBJECTS) $(dnsname_DEPENDENCIES) $(EXTRA_dnsname_DEPENDENCIES) 
	@rm -f dnsname$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dnsname_OBJECTS) $(dnsname_LDADD) $(LIBS)

dnsq$(EXEEXT): $(dnsq_OBJECTS) $(dnsq_DEPENDENCIES) $(EXTRA_dnsq_DEPENDENCIES) 
	@rm -f dnsq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dnsq_OBJECTS) $(dnsq_LDADD) $(LIBS)

dnsqr$(EXEEXT): $(dnsqr_OBJECTS) $(dnsqr_DEPENDENCIES) $(EXTRA_dnsqr_DEPENDENCIES) 
	@rm -f dnsqr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dnsqr_OBJECTS) $(dnsqr_LDADD) $(LIBS)

dnstrace$(EXEEXT): $(dnstrace_OBJECTS) $(dnstrace_DEPENDENCIES) $(EXTRA_dnstrace_DEPENDENCIES) 
	@rm -f dnstrace$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dnstrace_OBJECTS) $(dnstrace_LDADD) $(LIBS)

dnstxt$(EXEEXT): $(dnstxt_OBJECTS) $(dnstxt_DEPENDENCIES) $(EXTRA_dnstxt_DEPENDENCIES) 
	@rm -f dnstxt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dnstxt_OBJECTS) $(dnstxt_LDADD) $(LIBS)

randomip$(EXEEXT): $(randomip_OBJECTS) $(randomip_DEPENDENCIES) $(EXTRA_randomip_DEPENDENCIES) 
	@rm -f randomip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(randomip_OBJECTS) $(randomip_LDADD) $(LIBS)

rbldns$(EXEEXT): $(rbldns_OBJECTS) $(rbldns_DEPENDENCIES) $(EXTRA_rbldns_DEPENDENCIES) 
	@rm -f rbldns$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rbldns_OBJECTS) $(rbldns_LDADD) $(LIBS)

rbldns-data$(EXEEXT): $(rbldns_data_OBJECTS) $(rbldns_data_DEPENDENCIES) $(EXTRA_rbldns_data_DEPENDENCIES) 
	@rm -f rbldns-data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rbldns_data_OBJECTS) $(rbldns_data_LDADD) $(LIBS)

tcprules$(EXEEXT): $(tcprules_OBJECTS) $(tcprules_DEPENDENCIES) $(EXTRA_tcprules_DEPENDENCIES) 
	@rm -f tcprules$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcprules_OBJECTS) $(tcprules_LDADD) $(LIBS)

tinydns$(EXEEXT): $(tinydns_OBJECTS) $(tinydns_DEPENDENCIES) $(EXTRA_tinydns_DEPENDENCIES) 
	@rm -f tinydns$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinydns_OBJECTS) $(tinydns_LDADD) $(LIBS)

tinydns-data$(EXEEXT): $(tinydns_data_OBJECTS) $(tinydns_data_DEPENDENCIES) $(EXTRA_tinydns_data_DEPENDENCIES) 
	@rm -f tinydns-data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinydns_data_OBJECTS) $(tinydns_data_LDADD) $(LIBS)

tinydns-edit$(EXEEXT): $(tinydns_edit_OBJECTS) $(tinydns_edit_DEPENDENCIES) $(EXTRA_tinydns_edit_DEPENDENCIES) 
	@rm -f tinydns-edit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinydns_edit_OBJECTS) $(tinydns_edit_LDADD) $(LIBS)

tinydns-get$(EXEEXT): $(tinydns_get_OBJECTS) $(tinydns_get_DEPENDENCIES) $(EXTRA_tinydns_get_DEPENDENCIES) 
	@rm -f tinydns-get$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinydns_get_OBJECTS) $(tinydns_get_LDADD) $(LIBS)

walldns$(EXEEXT): $(walldns_OBJECTS) $(walldns_DEPENDENCIES) $(EXTRA_walldns_DEPENDENCIES) 
	@rm -f walldns$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(walldns_OBJECTS) $(walldns_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/axfr-get.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/axfrdns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/buffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/byte_chr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/byte_copy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/byte_cr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/byte_diff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/byte_rchr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/byte_zero.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/case_diffb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/case_diffs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/case_lowerb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cdb_hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cdb_make.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_dfd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_domain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_dtda.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_ip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_ipq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_mx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_name.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_nd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_packet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_rcip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_rcrw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_resolve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_sortip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_transmit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_txt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsfilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsipq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsmx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsname.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnstrace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnstxt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/droproot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/env.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/error_str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmt_ulong.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getln.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getln2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iopause.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ip4_fmt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ip4_scan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ndelay_off.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ndelay_on.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/okclient.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/open_read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/open_trunc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openreadclose.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parsetype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/printpacket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/printrecord.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/query.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random-ip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rbldns-data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rbldns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/readclose.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/response.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/roots.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scan_ulong.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seek_set.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/server.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/siphash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket_accept.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket_bind.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket_conn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket_listen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket_recv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket_send.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket_tcp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket_udp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/str_chr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/str_diff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/str_len.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/str_rchr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/str_start.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stralloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strerr_die.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strerr_sys.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tai_add.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tai_now.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tai_pack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tai_sub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tai_uint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tai_unpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taia_add.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taia_approx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taia_frac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taia_less.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taia_now.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taia_pack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taia_sub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taia_tai.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taia_uint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcprules.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdlookup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timeoutread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timeoutwrite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinydns-data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinydns-edit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinydns-get.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinydns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uint16_pack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uint16_unpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uint32_pack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uint32_unpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/walldns.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`
install-man1: $(nodist_man1_MANS)
	@$(NORMAL_INSTALL)
	@list1='$(nodist_man1_MANS)'; \
	list2=''; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-man8: $(nodist_man8_MANS)
	@$(NORMAL_INSTALL)
	@list1='$(nodist_man8_MANS)'; \
	list2=''; \
	test -n "$(man8dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man8dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man8dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.8[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man8dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man8dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man8dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man8dir)" || exit $$?; }; \
	done; }

uninstall-man8:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_man8_MANS)'; test -n "$(man8dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man8dir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS) $(MANS) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man8dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-man

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-sbinPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man: install-man1 install-man8

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS uninstall-man \
	uninstall-sbinPROGRAMS

uninstall-man: uninstall-man1 uninstall-man8

.MAKE: $(am__recursive_targets) all install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS clean-sbinPROGRAMS cscope cscopelist-am \
	ctags ctags-am dist dist-all dist-bzip2 dist-gzip dist-lzip \
	dist-shar dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-man1 install-man8 \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-man uninstall-man1 uninstall-man8 \
	uninstall-sbinPROGRAMS


axfrdns.8: axfrdns.ms
	sed -e 's:PREFIX:${sysconfdir}:' axfrdns.ms > axfrdns.8

axfr-get.1: axfr-get.ms
	cp axfr-get.ms axfr-get.1

djbdns.1: djbdns.ms
	cp djbdns.ms djbdns.1

dnscache.8: dnscache.ms
	sed -e 's:PREFIX:${sysconfdir}:' dnscache.ms > dnscache.8

dnsfilter.1: dnsfilter.ms
	cp dnsfilter.ms dnsfilter.1

dnsip.1: dnsip.ms
	cp dnsip.ms dnsip.1

dnsipq.1: dnsipq.ms
	cp dnsipq.ms dnsipq.1

dnsname.1: dnsname.ms
	cp dnsname.ms dnsname.1

dnsq.1: dnsq.ms
	cp dnsq.ms dnsq.1

dnsqr.1: dnsqr.ms
	cp dnsqr.ms dnsqr.1

dnstracesort: dnstracesort.sh
	cp dnstracesort.sh dnstracesort

dnstrace.1: dnstrace.ms
	cp dnstrace.ms dnstrace.1

dnstxt.1: dnstxt.ms
	cp dnstxt.ms dnstxt.1

randomip.1: random-ip.ms
	cp random-ip.ms randomip.1

rbldns.8: rbldns.ms
	sed -e 's:PREFIX:${sysconfdir}:' rbldns.ms > rbldns.8

rbldns-data.1: rbldns-data.ms
	cp rbldns-data.ms rbldns-data.1

tcprules.1: tcprules.ms
	cp tcprules.ms tcprules.1

# an init script for tinydns service.
tinydnsd: tinydns.sh
	sed -e 's:PREFIX:${prefix}:' tinydns.sh > tinydnsd

tinydns.8: tinydns.ms
	sed -e 's:PREFIX:${sysconfdir}:' tinydns.ms > tinydns.8

tinydns-data.1: tinydns-data.ms
	cp tinydns-data.ms tinydns-data.1

tinydns-edit.1: tinydns-edit.ms
	cp tinydns-edit.ms tinydns-edit.1

tinydns-get.1: tinydns-get.ms
	cp tinydns-get.ms tinydns-get.1

walldns.8: walldns.ms
	sed -e 's:PREFIX:${sysconfdir}:' walldns.ms > walldns.8

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
